#!/usr/bin/env php
<?php
// Make sure this script is being run over the PHP CLI!
if ('cli' !== php_sapi_name()) {
	return;
}

require_once __DIR__ . '/../index.php';

use function PhpcsChanged\Cli\{
	printHelp,
	printVersion,
	printErrorAndExit,
	getDebug,
	runManualWorkflow,
	runSvnWorkflow,
	runGitWorkflow,
	reportMessagesAndExit
};
use PhpcsChanged\UnixShell;

$optind = 0;
$options = getopt(
	'hs',
	[
		'help',
		'version',
		'diff:',
		'phpcs-orig:',
		'phpcs-new:',
		'svn',
		'git',
		'git-unstaged',
		'git-staged',
		'git-branch:',
		'standard:',
		'report:',
		'debug'
	],
	$optind
);

$fileNames = array_slice($argv, $optind);
$fileNamesExpanded = [];
foreach( $fileNames as $file ) {
	if ( is_dir($file) ) {
		$iterator = new RecursiveIteratorIterator(new RecursiveCallbackFilterIterator(new RecursiveDirectoryIterator($file, (RecursiveDirectoryIterator::SKIP_DOTS | FilesystemIterator::FOLLOW_SYMLINKS)), function($file, $key, $iterator){
			return $iterator->hasChildren() || ( $file->isFile() && '.php' === substr($file->getFilename(),-4) ) ? true : false;
		}));
		foreach( $iterator as $file ) {
			$fileNamesExpanded[] = $file->getPathName();
		}
	} else {
		$fileNamesExpanded[] = $file;
	}
}

if (isset($options['h']) || isset($options['help'])) {
	printHelp();
	exit(0);
}

if (isset($options['version'])) {
	printVersion();
}

$debug = getDebug(isset($options['debug']));
run($options, $fileNamesExpanded, $debug);

function run(array $options, array $fileNamesExpanded, callable $debug): void {
	$debug('Running on filenames: ' . implode(', ', $fileNamesExpanded));
	$reportType = $options['report'] ?? 'full';
	$diffFile = $options['diff'] ?? null;
	$phpcsOldFile = $options['phpcs-orig'] ?? null;
	$phpcsNewFile = $options['phpcs-new'] ?? null;

	if ($diffFile && $phpcsOldFile && $phpcsNewFile) {
		reportMessagesAndExit(
			runManualWorkflow($diffFile, $phpcsOldFile, $phpcsNewFile),
			$reportType,
			$options
		);
		return;
	}

	if ((isset($options['svn']) || isset($options['git'])) && empty($fileNamesExpanded)) {
		printErrorAndExit('You must supply at least one file or directory to process.');
		return;
	}

	if (isset($options['svn'])) {
		$shell = new UnixShell();
		reportMessagesAndExit(
			runSvnWorkflow($fileNamesExpanded, $options, $shell, $debug),
			$reportType,
			$options
		);
		return;
	}

	if (isset($options['git'])) {
		$shell = new UnixShell();
		reportMessagesAndExit(
			runGitWorkflow($fileNamesExpanded, $options, $shell, $debug),
			$reportType,
			$options
		);
		return;
	}

	if (count($options) > 0) {
		printErrorAndExit('You must use either manual or automatic mode.');
		return;
	}
	printHelp();
	exit(1);
}

